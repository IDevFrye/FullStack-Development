body {
    background-color: #cecece;
    /* задает цвет фона для всей страницы */
    padding: 0;
    /* убирает все внутренние отступы от края страницы */
}

div {
    width: 40px;
    height: 40px;
    /* задает ширину и высоту для всех div-элементов */
    position: relative;
    /* позволяет изменять положение элемента относительно его нормального положения */
    left: 10px;
    /* смещает элемент на 10px вправо относительно его нормального положения */
    transition: left 1s;
    /* добавляет плавный переход для изменения свойства "left" за 1 секунду */
}

.container {
    width: 100%;
    height: 100%;
    /* задает ширину и высоту контейнера на 100% родительского элемента */
}

.container:hover div {
    left: 500px;
    /* при наведении на контейнер перемещает вложенные div-элементы на 500px вправо */
}

.ease {
    background-color: blue;
    /* задает синий цвет фона */
    transition-timing-function: ease;
    /* плавный переход начинается медленно, затем ускоряется и снова замедляется к концу */
}

.linear {
    background-color: lime;
    /* задает лаймовый цвет фона */
    transition-timing-function: linear;
    /* плавный переход происходит с постоянной скоростью */
    transition-delay: 1s;
    /* добавляет задержку в 1 секунду перед началом перехода */
}

.ease-in {
    background-color: mediumseagreen;
    /* задает цвет фона "средняя морская волна" */
    transition-timing-function: ease-in;
    /* плавный переход начинается медленно и затем ускоряется */
    transition-delay: 2s;
    /* добавляет задержку в 2 секунды перед началом перехода */
}

.ease-out {
    background-color: orangered;
    /* задает оранжево-красный цвет фона */
    transition-timing-function: ease-out;
    /* плавный переход начинается быстро, затем замедляется к концу */
    transition-delay: 3s;
    /* добавляет задержку в 3 секунды перед началом перехода */
}

.ease-in-out {
    background-color: darkviolet;
    /* задает темно-фиолетовый цвет фона */
    transition-timing-function: ease-in-out;
    /* плавный переход начинается медленно, затем ускоряется и снова замедляется к концу */
    transition-delay: 4s;
    /* добавляет задержку в 4 секунды перед началом перехода */
}

.cubic-bezier {
    background-color: darkviolet;
    /* задает темно-фиолетовый цвет фона */
    transition-timing-function: cubic-bezier(.23, .33, .05, 1.18);
    /* задает пользовательскую функцию Безье для тайминга перехода, что позволяет детально настроить темп анимации */
    transition-delay: 5s;
    /* добавляет задержку в 5 секунд перед началом перехода */
}

/* Кубическая кривая Безье определяется четырьмя значениями: 
cubic-bezier(p1x, p1y, p2x, p2y) 

Эти параметры задают координаты двух контрольных точек (P1 и P2),
которые определяют форму кривой: 
p1x и p1y: координаты первой контрольной точки P1. 
p2x и p2y: координаты второй контрольной точки P2. 

Параметры в коде: 
.23: p1x (23% по оси X) - определяет положение первой контрольной точки по оси X. 
.33: p1y (33% по оси Y) - определяет положение первой контрольной точки по оси Y. 
.05: p2x (5% по оси X) - определяет положение второй контрольной точки по оси X. 
1.18: p2y (118% по оси Y) - определяет положение второй контрольной точки по оси Y.

1) Начало анимации медленное, с постепенным ускорением (P1). 
2) Затем резкое ускорение (малое значение X для P2). 
3) Замедление к концу анимации (значение Y для P2 выше 1, т.е. ожидаем перелет). */